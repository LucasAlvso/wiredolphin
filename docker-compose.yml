services:
  wiredolphin:
    image: wiredolphin:latest
    build: .
    container_name: wiredolphin
    restart: unless-stopped
    network_mode: host

    # Capabilities needed to create tun interface, iptables, and open raw sockets
    cap_add:
      - NET_ADMIN
      - NET_RAW

    # Access to /dev/net/tun from host
    devices:
      - "/dev/net/tun:/dev/net/tun"

    # Note: when using host networking, sysctls cannot be applied via compose.
    # IP forwarding will be attempted in entrypoint and ignored if not permitted.

    # Persist CSV logs and provide tunnel binary/source
    working_dir: /logs
    volumes:
      - ./logs:/logs

    # Environment configuration
    environment:
      # Analyzer interface (created by the tunnel)
      - IFACE=tun0
      # Physical/underlay interface (inside the container) used by the tunnel server
      - TUN_UNDERLAY_IF=eth0
      # Whether to start the tunnel process; set to false if you already run tunnel externally
      - TUN_START=true
      # Seconds to wait for IFACE to appear
      - TUN_WAIT_TIMEOUT=20
      # Tunnel address to assign if not configured by the tunnel binary
      - TUN_ADDR_CIDR=172.31.66.1/24
      # Enable NAT on the underlay interface
      - TUN_ENABLE_NAT=true

  client1:
    image: wiredolphin:latest
    depends_on:
      - wiredolphin
    container_name: wiredolphin-client1
    cap_add:
      - NET_ADMIN
      - NET_RAW
    devices:
      - "/dev/net/tun:/dev/net/tun"
    volumes:
      - ./traffic_tunnel:/client-config:ro
  # Use default bridge networking to keep client TUN interfaces isolated
    environment:
      - IFACE=tun0
      - CLIENT_UNDERLAY_IF=eth0
      - CLIENT_SCRIPT=/client-config/client1.sh
      # Generate some traffic through the tunnel
      - GEN_TRAFFIC=true
      - PING_TARGET=1.1.1.1
      - PING_COUNT=3
      - HTTP_URL=http://example.com/
      - DNS_NAME=example.com
      - DNS_SERVER=1.1.1.1
      - NTP_SERVER=pool.ntp.org
      - TUN_WAIT_TIMEOUT=20
    entrypoint: ["/entrypoint-client.sh"]

  client2:
    image: wiredolphin:latest
    depends_on:
      - wiredolphin
    container_name: wiredolphin-client2
    cap_add:
      - NET_ADMIN
      - NET_RAW
    devices:
      - "/dev/net/tun:/dev/net/tun"
    volumes:
      - ./traffic_tunnel:/client-config:ro
  # Use default bridge networking to keep client TUN interfaces isolated
    environment:
      - IFACE=tun0
      - CLIENT_UNDERLAY_IF=eth0
      - CLIENT_SCRIPT=/client-config/client2.sh
      - GEN_TRAFFIC=true
      - PING_TARGET=8.8.8.8
      - PING_COUNT=3
      - HTTP_URL=http://example.org/
      - DNS_NAME=cloudflare.com
      - DNS_SERVER=8.8.8.8
      - NTP_SERVER=time.google.com
      - TUN_WAIT_TIMEOUT=20
    entrypoint: ["/entrypoint-client.sh"]
